ïƒ˜	React Hooks:
-Introduced on react 16.8 version.
-To manage state and life cycle features in functional components.

State: It is an essential part in react because it allows components to be dynamic, interactive, and capable of responding to user input or change over time.
	1)useStateHook:
	-useState allows you to add state to functional components.
	-Syntax:
		Const[state, setState]=useState(initial value)
		-State: This is the current state.
		-setState: This is function to update the state.
		-Initial value: The value you want to set as the initial value.

Counter.js:
import React,{useState} from 'react';
//counter component
const Counter=()=>{
  const[count,setCount]=useState(0);
  //current count=0
  return(
    <div>
      <h1>{count}</h1>
      <button onClick={()=>setCount(count+1)}>Increment</button>
      <button onClick={()=>setCount(count-1)}>Decrement</button>
    </div>
  )
}
export default Counter;

ThemeToggler.js:
import React,{useState} from 'react';
const ThemeToggler=()=>{
  const[theme,setTheme]=useState('light')
  const togglerTheme=()=>{
    setTheme(prevTheme=>(prevTheme=='light'?'dark':'light'))
  }
  return(
    <div style={{backgroundColor:theme=='light'?'white':'black',color:theme=='light'?'black':'white',textAlign:'center'}}>
      <h1> The Current Theme is {theme}</h1>
      <button onClick={togglerTheme}>togglerTheme</button>

    </div>
  )
}
export default ThemeToggler;
