ïƒ˜	REACT MEMO:
-It is a HOC (High Order Component) and is not a React hook.
-It will stop unnecessary rendering of functional components of its props.
-It will improve the performance of the functional components.
-Ex:
App.js
import {useState} from 'react';
import ChildA from './ChildA';
import ChildB from './ChildB';

const Parent=()=>{
  const[count,setCount]=useState(0);
  const increment=()=>{
    setCount(c=>c+1);
  };
  return(
    <div>
      <ChildA/>
      <ChildB count={count} increment={increment}/>
    </div>
  )
};
export default Parent;


ChildA.js (without memo)
const ChildA=()=>{
    console.log("Child A is Rendered.")
    return <h2>This is Child A</h2>
};
export default ChildA;


ChildB.js (without memo)
const ChildB=(count,increment)=>{
    console.log("Child B is Rendered.")
    return( 
    <div>
        <h2>Count:{count}</h2>
        <button onClick={increment}>Increment</button>
    </div>
    );
};
export default ChildB;
